import org.gradle.internal.os.OperatingSystem

plugins {
    id 'swift-application'
    id 'xcode'
}

def greeterDebugImportPath = file('../simple-library/build/modules/main/debug/Math.swiftmodule')
def greeterReleaseImportPath = file('../simple-library/build/modules/main/release/Math.swiftmodule')

def greeterDebugLib = file(OperatingSystem.current().getSharedLibraryName('../simple-library/build/lib/main/debug/Math'))
def greeterReleaseLib = file(OperatingSystem.current().getSharedLibraryName('../simple-library/build/lib/main/release/Math'))

if (!greeterDebugLib.exists() || !greeterReleaseLib.exists() || !greeterDebugImportPath.exists() || !greeterReleaseImportPath.exists()) {
    throw new GradleException("Please build project at ${file('../simple-library')} using './gradlew -p ../simple-library assembleRelease assembleDebug'")
}

components.main.binaries.whenElementFinalized { binary ->
    dependencies {
        if (binary.optimized) {
            add(binary.importPathConfiguration.name, files(greeterReleaseImportPath))
            add(binary.linkLibraries.name, files(greeterReleaseLib))
            add(binary.runtimeLibraries.name, files(greeterReleaseLib))
        } else {
            add(binary.importPathConfiguration.name, files(greeterDebugImportPath))
            add(binary.linkLibraries.name, files(greeterDebugLib))
            add(binary.runtimeLibraries.name, files(greeterDebugLib))
        }
    }
}
