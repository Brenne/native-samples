plugins {
    id 'cpp-library'
    id 'xcode'
    id 'maven-publish'
    id 'cpp-unit-test'
}

group = 'org.gradle.cpp-samples'
version = '1.5'

repositories {
    maven {
        url = 'https://repo.gradle.org/gradle/libs-snapshots-local/'
    }
}

def targetPlatform = compileDebugCpp.targetPlatform

dependencies {
    // Currently, the operating system and architecture are not considered by dependency management
    // Encode the operating system and architecture in the module name instead
    // Also, as the Gradle publishing format for C++ is not yet stable, encode the Gradle version in the module as well
    // None of this will be necessarily in later releases and Gradle will take care of these things instead
    def osName = targetPlatform.operatingSystem.name.replace(' ', '').toLowerCase()
    if (osName.startsWith('windows')) {
        // Windows 10 binaries are backward compatible with Windows 7
        osName = 'windows10'
    }
    def archName = targetPlatform.architecture.name.replace(' ', '').toLowerCase()
    def gradleVersion = '4.5'

    unitTestImplementation "org.gradle.cpp-samples:googletest_${osName}_${archName}_${gradleVersion}:latest.integration"
}

tasks.withType(CppCompile) {
    if (toolChain instanceof Gcc) {
        // Use C++03 with the old ABIs, as this is what the googletest binaries were built with
        // Later, Gradle's dependency management will understand ABI
        compilerArgs.add('-std=c++03')
        compilerArgs.add('-D_GLIBCXX_USE_CXX11_ABI=0')
    }
}
tasks.withType(LinkSharedLibrary) {
    if (toolChain instanceof Gcc) {
        linkerArgs.add('-std=c++03')
    }
}

publishing {
    repositories {
        maven {
            url = '../repo'
        }
    }
}
