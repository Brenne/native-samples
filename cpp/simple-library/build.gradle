plugins {
    id 'cpp-library'
    id 'xcode'
    id 'visual-studio'
    id 'maven-publish'
    id 'cpp-unit-test'
}

group = 'org.gradle.cpp-samples'
version = '1.5'

repositories {
    maven {
        url = 'https://repo.gradle.org/gradle/libs-snapshots-local/'
    }
}

// Currently, the operating system and architecture are not considered by dependency management
// Encode the operating system and architecture in the module name instead
// Also, as the Gradle publishing format for C++ is not yet stable, encode the Gradle version in the module as well
// None of this will be necessarily in later releases and Gradle will take care of these things instead
unitTest {
    binaries.whenElementFinalized {
        def osName = targetPlatform.operatingSystem.name.replace(' ', '').toLowerCase()
        if (osName.startsWith('windows')) {
            // Windows 10 binaries are backward compatible with Windows 7
            osName = 'windows10'
        }
        def archName = targetPlatform.architecture.name.replace(' ', '').toLowerCase()
        def gradleVersion = '4.5'

        dependencies {
            implementation "org.gradle.cpp-samples:googletest_${osName}_${archName}_${gradleVersion}:latest.integration"
        }
    }
}

tasks.withType(CppCompile) {
    compilerArgs.addAll provider {
        if (toolChain.get() instanceof Gcc) {
            // Use C++03 with the old ABIs, as this is what the googletest binaries were built with
            // Later, Gradle's dependency management will understand ABI
            return ['-std=c++03', '-D_GLIBCXX_USE_CXX11_ABI=0']
        }
        return []
    }
}
tasks.withType(LinkSharedLibrary) {
    linkerArgs.addAll provider {
        if (toolChain.get() instanceof Gcc) {
            return ['-std=c++03']
        }
        return []
    }
}

publishing {
    repositories {
        maven {
            url = '../repo'
        }
    }
}
