import groovy.io.FileType

plugins {
    id 'groovy'
    id 'idea'
}

repositories {
    jcenter()
}

dependencies {
    testImplementation gradleTestKit()
    testImplementation localGroovy()
    testImplementation('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
}

test {
    inputs.files files('../swift', '../cpp').asFileTree.matching {PatternFilterable pattern ->
        pattern.exclude '**/build', '**/.gradle', '**/*.xcworkspace', '**/*.xcodeproj', '**/repo'
    }
}

task cleanRepo(type: Delete) {
    delete file('../cpp/repo')
}

task cleanSamples {
    dependsOn cleanRepo
    doLast {
        def toDelete = []
        [file('../swift'), file('../cpp')]*.eachFileRecurse(FileType.DIRECTORIES) { File dir ->
            if ([/repo/, /build/, /\.gradle/, /.+\.xcworkspace/, /.+\.xcodeproj/].any { dir.name ==~ it }) {
                toDelete << dir
            }
        }
        toDelete.each { it.deleteDir() }
    }
}

clean.dependsOn cleanSamples